import { elizaLogger } from '@elizaos/core';
import OpenAI from 'openai';

/**
 * Interface for OpenAI image generation API response
 */
interface OpenAIImageResponse {
  created: number;
  data: Array<{
    url?: string;
    revised_prompt?: string;
  }>;
}

/**
 * Creates a service for generating images using OpenAI's gpt-image-1 model
 * See: https://platform.openai.com/docs/guides/images
 */
export const createImageGenerationService = (apiKey: string) => {
  const openai = new OpenAI({
    apiKey,
  });

  return {
    generateImage: async (prompt: string): Promise<string> => {
      try {
        elizaLogger.log('Generating image with prompt:', prompt);

        const response = await openai.images.generate({
          model: 'gpt-image-1',
          prompt,
          n: 1,
          quality: 'medium',
          size: '1024x1024',
          output_format: 'jpeg',
        });

        if (!response.data?.[0]?.url) {
          throw new Error('No image was generated by OpenAI');
        }

        elizaLogger.log('Image URL received from OpenAI');
        return response.data[0].url;
      } catch (error) {
        elizaLogger.error('Failed to generate image with OpenAI:', error);
        throw error;
      }
    },
  };
};

export default createImageGenerationService;
